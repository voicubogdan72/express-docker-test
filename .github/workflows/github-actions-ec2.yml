# on:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     name: Deploy to Ec2
#     runs-on: ubuntu-latest
#     steps:
#       - name: Executing remote ssh commands using ssh key
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST_DNS }}
#           username: ${{ secrets.USERNAME }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd express-docker-test
#             npm install
#             npm run build
#             npm run start

# name: CI

# on:
#   push:
#     branches: [main]
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Deploy to EC2
#         env:
#           PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
#           HOSTNAME: ${{ secrets.HOSTNAME }}
#           USER_NAME: ${{ secrets.USER }}
#         run: |
#           git clone https://github.com/voicubogdan72/express-docker-test.git  && cd express-docker-test
#       - name: Create docker image for API
#         run: docker build -t api .
#       - name: Docker run
#         run: docker run -d -p 7777:7777

#         # ssh -i $PRIVATE_KEY $USER_NAME@$HOSTNAME "git clone https://github.com/voicubogdan72/express-docker-test.git && cd express-docker-test && npm install && npm run build && npm start"

name: Deploy to ECR
on:
  push:
    branches: [main]
env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: devops-tes
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
      - name: Build, tag and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
